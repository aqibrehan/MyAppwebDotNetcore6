@model MyApp.Models.ViewModels.ProductVM
<form method="post" asp-action="CreateUpdate" enctype="multipart/form-data">
    <input type="hidden" asp-for="product.Id" />
    <input type="hidden" asp-for="product.ImageURl"/>
    <img src="@Model.product.ImageURl" width="100" height="100"/>
    <div class="border p-3 mt-4">
        <div class="row pb-3">
            <h2 class="text-primary">@((Model.product==null|| Model.product.Id==0)?"Create":"Update") Product</h2>
            <hr />
        </div>
        <div asp-validation-summary=All></div>
        <div class="row mb-3">
            <label asp-for="product.Name"></label>
            <input asp-for="product.Name" class="form-control" />
            <span asp-validation-for="product.Name" class="text-danger"></span>
        </div>

        <div class="row mb-3">
            <label asp-for="product.Description"></label>
            <textarea asp-for="product.Description" class="form-control" ></textarea>
            <span asp-validation-for="product.Description" class="text-danger"></span>
        </div>
        <div class="row mb-3">
            <label asp-for="product.Price"></label>
            <input asp-for="product.Price" class="form-control" />
            <span asp-validation-for="product.Price" class="text-danger"></span>
        </div>
        <div class="row mb-3">
            <label asp-for="product.ImageURl"></label>
            <input type="file" id="ImageFile" name="file"  class="form-select" />
        </div>
        <div class="row mb-3">
            <label asp-for="product.CategoryId"></label>
            <select asp-for="product.CategoryId" asp-items="@Model.Categories as IEnumerable<SelectListItem>"  class="form-control" >
                <option selected disabled>--Select Category</option>
            </select>
            <span asp-validation-for="product.CategoryId" class="text-danger"></span>
        </div>
        


        @if (Model.product == null || Model.product.Id == 0)
        {
            <button class="btn btn-primary" onclick="return ValidateEmpty()" type="submit">Create</button>
        }
        else
        {
            <button class="btn btn-primary" type="submit">Update</button>
        }

    </div>
    <a asp-action="Index" asp-controller="Product">Back to List</a>

</form>

@section scripts 
{
    @{
    <partial name="_ValidationScriptsPartial"/>
    }
    <script>



     
            tinymce.init({
                selector: 'textarea',
                plugins: 'ai tinycomments mentions anchor autolink charmap codesample emoticons image link lists media searchreplace table visualblocks wordcount checklist mediaembed casechange export formatpainter pageembed permanentpen footnotes advtemplate advtable advcode editimage tableofcontents mergetags powerpaste tinymcespellchecker autocorrect a11ychecker typography inlinecss',
                toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table mergetags | align lineheight | tinycomments | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
                tinycomments_mode: 'embedded',
                tinycomments_author: 'Author name',
                mergetags_list: [
                    { value: 'First.Name', title: 'First Name' },
                    { value: 'Email', title: 'Email' },
                ],
                ai_request: (request, respondWith) => respondWith.string(() => Promise.reject("See docs to implement AI Assistant"))
            });
  
        function ValidateEmpty ()
        {
            if(document.getElementById("ImageFile").value=="")
            {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Upload Image',
                });
                return false;
            }
            return true;
        }
    </script>
}